name: Re-Deployment after Terraform provisioning
on:
  workflow_dispatch:
    
jobs:
  reconfig:
    environment: "Development"
    name: Re-configure RDS after Terraform provisioning

    runs-on: ubuntu-latest
    env:
      DB_URL: ${{ secrets.DB_URL }}
      DB_USERNAME: ${{ vars.DB_USER }}
      DB_PASSWORD: ${{ secrets.DB_PASSWORD }}
      SSH_PRIVATE_KEY: ${{ secrets.EC2_SSH_PRIVATE_KEY }}
    steps:
        - name: Checkout repository with submodules
          uses: actions/checkout@v4
          with:
            submodules: 'recursive'
        - name: Make migration and check for connection
          run: |
            chmod +x mvnw
            ./mvnw -Pflyway flyway:migrate -Dflyway.url=${{ secrets.DB_URL }}

  redeploy:
    environment: "Development"
    name: Re-Deploy CQRS Application after Terraform provisioning
    
    runs-on: ubuntu-latest
    env:
      DB_URL: ${{ secrets.DB_URL }}
      DB_USERNAME: ${{ vars.DB_USER }}
      DB_PASSWORD: ${{ secrets.DB_PASSWORD }}
      VITE_HOST_IP: ${{ vars.EC2_PUBLIC_IP }}
      DOCKERHUB_USERNAME: ${{ vars.DOCKERHUB_USERNAME }}
      DOCKERHUB_TOKEN: ${{ secrets.DOCKERHUB_TOKEN }}
      SSH_PRIVATE_KEY: ${{ secrets.EC2_SSH_PRIVATE_KEY }}
    steps:
      - name: Checkout repository with submodules
        uses: actions/checkout@v4
        with:
          submodules: 'recursive'

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ vars.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Deploy to EC2 Instance
        uses: appleboy/ssh-action@v0.1.7
        with:
          host: ${{ vars.EC2_PUBLIC_IP }}
          username: ec2-user
          key: ${{ secrets.EC2_SSH_PRIVATE_KEY }}
          port: 22
          script: |
            docker compose -f docker/compose.yaml -f docker/docker-compose.build.yaml pull
            docker compose -f docker/compose.yaml -f docker/docker-compose.build.yaml up -d --remove-orphans
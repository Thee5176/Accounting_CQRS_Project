name: Deploy Image to EC2 Instance

on:
  push:
    branches:
    - main
    - develop
  pull_request:
    types: [opened, synchronize, reopened]
  workflow_dispatch:

jobs:
  setup-terraform:
    environment: "AWS and Supabase"
    name: Set up AWS EC2 Instance with Terraform
    # needs: build-and-test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup AWS Credential     #TODO: Setup IAM User with Permission and generate credentials with Terraform
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ vars.AWS_REGION }}
      - name: Set up SSH key
        env:
          SSH_PRIVATE_KEY: ${{ secrets.EC2_SSH_PRIVATE_KEY }}
        run: |
            mkdir -p ~/.ssh
            echo $SSH_PRIVATE_KEY > ~/.ssh/my_ec2_key
            chmod 600 ~/.ssh/my_ec2_key
            echo "SSH key set up successfully"
        working-directory: envs/dev
      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.12.2
      - name: Terraform Init, Verify, and Plan
        run: |
          terraform init
          terraform validate
          terraform plan
        working-directory: envs/dev
      - name: Apply Terraform and Deliver Code to EC2
        run: |
          terraform apply -auto-approve

          ssh -i ~/.ssh/my_ec2_key ec2-user@"$(terraform output -raw instance_public_ip | head -n 1)" << 'EOF'
            echo "--- Clone Repository: ---"
            git clone --recurse-submodules -j3 https://github.com/Thee5176/SpringBoot_CQRS
            cd SpringBoot_CQRS

            echo "--- Pulling latest Docker images: ---"
            docker compose -f docker/compose.yaml -f docker/docker-compose.prod.yaml pull
            docker compose -f docker/compose.yaml -f docker/docker-compose.prod.yaml up -d --no-build
            
            echo "--- Verifying running containers: ---"
            docker ps
            
            echo "--- Deployment complete. ---"
          EOF
        working-directory: envs/dev
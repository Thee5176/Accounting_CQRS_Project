name: Deploy to AWS

on:
  push:
    branches:
      - main
      - develop
  pull_request:
    types: [opened, synchronize, reopened]
  workflow_dispatch:

jobs:
  terraform:
    environment: "AWS and Supabase"
    runs-on: ubuntu-latest
    env:
      AWS_SSH_PUBLIC_KEY: ${{ secrets.AWS_SSH_PUBLIC_KEY }}
    outputs:
      ec2_public_ip: ${{ steps.capture-ec2-ip.outputs.ec2_public_ip }}
    steps:
      - name: Set up SSH key
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.AWS_SSH_PUBLIC_KEY }}" > ~/.ssh/id_rsa.pub
          chmod 600 ~/.ssh/id_rsa.pub
          echo "SSH key set up successfully"

      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.12.2

      - name: Terraform Init, Verify, and Plan
        run: |
          terraform init
          terraform verify
          terraform plan
        working-directory: envs/dev

      - name: Terraform Apply
        run: terraform apply -auto-approve
        working-directory: envs/dev

      - id: capture-ec2-ip
        name: Capture EC2 public IP output
        run: echo "ec2_public_ip=$(terraform output -raw ec2_public_ip)" >> $GITHUB_OUTPUT
        working-directory: envs/dev


  deploy-code:
    environment: "AWS and Supabase"
    name: Deploy Code to EC2 Instance
    env:
      AWS_SSH_PRIVATE_KEY: ${{ secrets.AWS_SSH_PRIVATE_KEY }}
      EC2_PUBLIC_IP: ${{ needs.terraform.outputs.ec2_public_ip }}
    needs: terraform
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: SSH into EC2 instance
        run: |
          ssh -o StrictHostKeyChecking=no -i ${{ secrets.AWS_SSH_PRIVATE_KEY }} ec2-user@"$EC2_PUBLIC_IP" << 'EOF'
          docker compose -f compose.yaml up -d --no-build
          docker ps
          EOF